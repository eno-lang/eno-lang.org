title: The eno notation language and libraries

# content

-- html
LAST_UPDATE

<h2>eno is currently transitioning from its first to its final specification!</h2>

<strong>eno final</strong> - If you want to try out the release candidate ecosystem for the final
specification you are already there - have a look around, we're excited to have
you on board!<br>
<strong>eno first</strong> - If you need PHP library support before it becomes
available for the final specification or want to use the first, completely
stable ecosystem for now, visit the <a href="https://archived.eno-lang.org"
target="_blank">website for eno's initial version.</a>.
-- html

## poster

tagline: A modern plaintext data format for file-based content.
title: eno

platform:
label = Atom Plugin
logo = /atom.svg
url = /plugins/atom/

platform:
label = Visual Studio Code Plugin
logo = /vscode.svg
url = /plugins/vscode/

platform:
label = Sublime Text Plugin
logo = /sublime.svg
url = /plugins/sublime/

platform:
label = Ace Plugin
logo = /ace.png
url = /plugins/ace/

platform:
label = Prism Plugin
logo = /prism.svg
url = /plugins/prism/

-- eno
author: Jane Doe
email: jane@eno-lang.org

-- my_content
Multi-line embedded content (e.g. markdown) here ...
-- my_content

states:
active = #fff
hover = #b6b6b6

# cities
Den Haag: 52.069961, 4.302315
Málaga: 36.721447, -4.421291
서울특별시: 37.566984, 126.977041

# cities expanded < cities
Springfield: 38.790312, -77.186418
-- eno

-- description
Overview:
- Aesthetic, intuitive and simple
- Inclusively designed for you *and* your team
- Predefined and custom type support for keys, values and comments
- Elements and hierarchies can be copied and merged for complex usecases

Usecases:
- Authoring blogs, up to entire websites, from the macro to the micro level
- Generating documentation, invoices, CVs, reports, you name it
- Large scale textfile-based databases and archives
- Configuration files, from the simplest to the most complex

[More about eno](/eno/)
-- description

## poster

title: enolib
tagline: The cross-language eno standard library.

platform:
label = JavaScript Implementation
logo = /javascript.svg
url = /enolib/

platform:
label = Python Implementation
logo = /python.svg
url = /enolib/

platform:
label = Ruby Implementation
logo = /ruby.svg
url = https://rubygems.org/gems/enolib

-- javascript
import enolib from 'enolib';

const document = enolib.parse(`
  author: Jane Doe
  title:
`);

document.field('author').requiredStringValue();
  // returns 'Jane Doe'
  
document.field('title').requiredStringValue();
  // throws "The field 'title' must contain a value.
  //
  //   Line | Content
  //      1 | author: Jane Doe
  // >    2 | title:
  //
-- javascript

-- description
Overview:
- Dynamically extensible query API for custom and third party type support
- Cursor lookup API (by index or line/column) for easy authoring of rich IDE plugins
- Querying equals validating - guaranteed data structure and type-safety
- Fully localized, handwritten, team-friendly error messages
- Rich error metadata: message, document snippet, cursor position, selection range

Usecases:
- Static site generation, scalable up to massive amounts of content
- Generating documentation, code, reports, invoices, CVs, you name it
- Highly reliable application configuration data with minimal development effort
- Content management tooling for apps, websites, editors, IDEs, ...

[More about enolib](/enolib/)
-- description

## poster

title: enotype
tagline: Functional type implementations for use with (or without) enolib.

platform:
label = npm Package
logo = /javascript.svg
url = https://www.npmjs.com/package/enotype

platform:
label = Python Package
logo = /python.svg
url = https://pypi.org/project/enotype/

platform:
label = Ruby Gem
logo = /ruby.svg
url = https://rubygems.org/gems/enotype

platform:
label = PHP Implementation
logo = /php.svg
url = https://github.com/eno-lang/enotype/tree/master/php

-- javascript
import { latLng } from 'enotype';

latLng('36.721447, -4.421291');
  // returns { lat: 36.721447, lng: -4.421291 } 

enolib.register({ latLng });

document.section('cities').field('Málaga').requiredLatLngValue();
  // returns { lat: 36.721447, lng: -4.421291 }
-- javascript

-- description
enotype is a collection of minimalist functions that validate and convert type-unsafe `string` representations into type-safe, native types. It is the standard type library for [enolib](/enolib/) but can be utilized in a multitude of other contexts as well.

[More about enotype](/enotype/)
-- description

## poster

tagline: In development community projects around eno.
title: more

platform:
label = (Incomplete) Java library for parsing and emitting Eno documents
logo = /java.svg
url = https://github.com/Nzen/Enohar

platform:
label = Tcl parser
logo = /tcl.svg
url = https://github.com/bef/enotcl

-- description
[enotcl](https://github.com/bef/enotcl) - Tcl parser  
[Enohar](https://github.com/Nzen/Enohar) - (Incomplete) Java library for parsing and emitting Eno documents 
-- description
