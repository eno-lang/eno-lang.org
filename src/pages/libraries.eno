title: Develop applications and websites with eno

# content

## single

-- markdown
# Libraries

All libraries are built upon custom, dependency-free, pure parser implementations.
The growing [benchmark suite](https://github.com/eno-lang/benchmarks/) indicates that eno
parsers by now already outperform most popular toml/yaml parsers in their respective language,
even keeping up with parsers utilizing native C library bindings.

-- markdown

## columns-4

-- markdown
## <img class="logo" src="/javascript.svg" /> JavaScript (enojs)

[API Documentation](/javascript/)  
[npm package](https://npmjs.com/package/enojs/)  
[Github repository](https://github.com/eno-lang/enojs/)
-- markdown

-- markdown
## <img class="logo" src="/php.svg" />  PHP (enophp)

Release 5th-11th Nov 2018

[API Documentation](/php/)  
[Github repository](https://github.com/eno-lang/enophp/)
-- markdown

-- markdown
## <img class="logo" src="/python.svg" /> Python (enopy)

[API Documentation](/python/)  
[PyPI package](https://pypi.org/project/enopy/)  
[Github repository](https://github.com/eno-lang/enopy/)
-- markdown

-- markdown
## <img class="logo" src="/ruby.svg" /> Ruby (enorb)

[API Documentation](/ruby/)  
[Ruby gem](https://rubygems.org/gems/enorb/)  
[Github repository](https://github.com/eno-lang/enorb/)
-- markdown

-- markdown
## <img class="logo" src="/rust.svg" /> Rust (enors)

Development continues Dec 2018

[Repository on github](https://github.com/eno-lang/enors/)
-- markdown

## single

-- markdown
## Benchmarks

The eno benchmark suite evaluates the performance of all eno libraries, also in comparison
against other popular libraries for parsing yaml and toml.

Visit [github.com/eno-lang/benchmarks](https://github.com/eno-lang/benchmarks/) to study these.

## Interactive Demos

This is a work in progress effort to showcase different usecases for eno and the
eno libraries as interactive demos in the browser. Right now there is only a
limited selection of early demos and a draft page layout.

[Interactive Demos](/demo/)  

## Experimental loaders

For each of the core eno implementations there is also an additional
*experimental loaders* project, where new loaders are tested and evaluated. Feel
free to use the experimental loaders as an expansion package, they are carefully
crafted and unit-tested just like the core libraries themselves!

[enojs-exploaders (Javascript)](https://github.com/eno-lang/enojs-exploaders/)  
[enopy-exploaders (Python)](https://github.com/eno-lang/enopy-exploaders/)  
[enorb-exploaders (Ruby)](https://github.com/eno-lang/enorb-exploaders/)  

## Dive deeper

Explore all repositories where the development work is currently happening at the eno umbrella organization on github.

[github.com/eno-lang](https://github.com/eno-lang/)
-- markdown
