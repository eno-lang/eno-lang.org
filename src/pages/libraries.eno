title: Develop applications and websites with eno

# content

## single

-- markdown
# Libraries

All libraries are built upon custom, dependency-free, pure parser implementations.
The growing [benchmark suite](https://github.com/eno-lang/benchmarks/) indicates that eno
parsers by now already outperform most popular toml/yaml parsers in their respective language,
even keeping up with parsers utilizing native C library bindings.

-- markdown

## tripled

-- third
## <img class="logo" src="/javascript.svg" />  enojs v0.16.1 (JavaScript)

[Complete documentation and API reference](https://eno-lang.org/javascript/)  
[Package on npm](https://npmjs.com/package/enojs/)  
[Repository on github](https://github.com/eno-lang/enojs/)
-- third

-- third
## <img class="logo" src="/python.svg" />  enopy v0.9.1 (Python)

[Complete documentation and API reference](https://eno-lang.org/python/)  
[Package on PyPI](https://pypi.org/project/enopy/)  
[Repository on github](https://github.com/eno-lang/enopy/)
-- third

-- third
## <img class="logo" src="/ruby.svg" />  enorb v0.10.2 (Ruby)

[Complete documentation and API reference](https://eno-lang.org/ruby/)  
[Gem on rubygems](https://rubygems.org/gems/enorb/)  
[Repository on github](https://github.com/eno-lang/enorb/)
-- third

-- third
## <img class="logo" src="/php.svg" />  enophp (PHP)

In development!

[Repository on github](https://github.com/eno-lang/enophp/)
-- third

-- third
## <img class="logo" src="/rust.svg" />  enors (Rust)

Early development.

[Repository on github](https://github.com/eno-lang/enors/)
-- third

## single

-- markdown
## Roadmap for further implementations

Go and Java are likely followup candidates, but what lands on the definite roadmap will also depend on your
feedback, so make yourself heard if you have suggestions or questions!

## Benchmarks

The eno benchmark suite evaluates the performance of all eno libraries, also in comparison
against other popular libraries for parsing yaml and toml.

Visit [github.com/eno-lang/benchmarks](https://github.com/eno-lang/benchmarks/) to study these.

## Interactive Demos

This is a work in progress effort to showcase different usecases for eno and the
eno libraries as interactive demos in the browser. Right now there is only a
limited selection of early demos and a draft page layout.

[Interactive Demos](https://eno-lang.org/demo/)  

## Experimental loaders

For each of the core eno implementations there is also an additional
*experimental loaders* project, where new loaders are tested and evaluated. These
loaders will from time to time migrate into the core libraries if they are found
to be really useful and well enough implemented. Feel free to use the
experimental loaders as an expansion package, they are carefully crafted and
unit-tested just like the core libraries themselves!

[enojs-exploaders (Javascript)](https://github.com/eno-lang/enojs-exploaders/)  
[enopy-exploaders (Python)](https://github.com/eno-lang/enopy-exploaders/)  
[enorb-exploaders (Ruby)](https://github.com/eno-lang/enorb-exploaders/)  

## Dive deeper

Explore all repositories where the development work is currently happening at the eno umbrella organization on github.

[github.com/eno-lang](https://github.com/eno-lang/)
-- markdown
